# Define data sources to get subscription and client configuration details

# Data source to get details about the subscription
data "azurerm_subscription" "primary" {
  subscription_id = var.subscription_id
}

# Data source to get client configuration details
data "azurerm_client_config" "example" {}

# Define the custom role with specific permissions
resource "azurerm_role_definition" "example_custom_role" {
  # Name of the custom role
  name        = "CustomRole"
  description = "Custom role with specific permissions"
  
  # Set the scope of the role (subscription level in this case)
  scope       = "/subscriptions/${data.azurerm_subscription.primary.subscription_id}"

  # Define the permissions that are granted by this role
  permissions {
    # Actions are the specific permissions allowed by the role
    actions = [
      "Microsoft.Resources/subscriptions/resourceGroups/read" # Read access to resource groups within the subscription
    ]

    # Define permissions that are explicitly not allowed
    not_actions = []
  }

  # Define the assignable scopes for this role
  assignable_scopes = [
    data.azurerm_subscription.primary.id, # The role can be assigned at the subscription level
  ]
}

# Role Assignment Block - Assign the custom role to a service principal

resource "azurerm_role_assignment" "example_role_assignment" {
    # Generate a unique name for the role assignment using UUID
  name          = uuid() # Just use the UUID generated by the uuid() function

  # Specify the principal (user, group, or service principal) that the role is assigned to
  principal_id   = data.azurerm_client_config.example.object_id

  # Specify the custom role definition to be assigned
  role_definition_name = azurerm_role_definition.example_custom_role.name

  # Define the scope at which scope the role will be assigned
  scope = data.azurerm_subscription.primary.id
}
